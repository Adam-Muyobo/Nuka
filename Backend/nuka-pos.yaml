openapi: 3.0.3
info:
  title: Nuka POS API
  description: API for the Nuka Point of Sale system, including user authentication, product management, transactions, payments, and tax records.
  version: 1.0.0
servers:
  - url: http://localhost:8080/api
    description: Local Development Server
paths:
  /auth/login:
    post:
      summary: User Login (Generate JWT)
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: Successful Login
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    description: JWT token to be used for authorization
        '401':
          description: Unauthorized - Invalid credentials

  /users:
    post:
      summary: Create User
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User Created Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'

  /users/{id}:
    get:
      summary: Get User by ID
      operationId: getUserById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: User Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
    put:
      summary: Update User
      operationId: updateUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User Updated Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
    delete:
      summary: Delete User
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: User Deleted Successfully

  /products:
    post:
      summary: Create Product
      operationId: createProduct
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Product Created Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'

  /products/{id}:
    get:
      summary: Get Product by ID
      operationId: getProductById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Product Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
    put:
      summary: Update Product
      operationId: updateProduct
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Product Updated Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
    delete:
      summary: Delete Product
      operationId: deleteProduct
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Product Deleted Successfully

  /transactions:
    post:
      summary: Create Transaction
      operationId: createTransaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
      responses:
        '201':
          description: Transaction Created Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'

  /transactions/{id}:
    get:
      summary: Get Transaction by ID
      operationId: getTransactionById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Transaction Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'

  /transactions-items:
    post:
      summary: Add Transaction Item
      operationId: addTransactionItem
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionItem'
      responses:
        '201':
          description: Transaction Item Added Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionItemResponse'

  /payments:
    post:
      summary: Create Payment
      operationId: createPayment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
      responses:
        '201':
          description: Payment Created Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'

  /tax-records:
    post:
      summary: Create Tax Record
      operationId: createTaxRecord
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaxRecord'
      responses:
        '201':
          description: Tax Record Created Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxRecordResponse'

components:
  schemas:
    User:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
      required:
        - name
        - email
        - phoneNumber
    UserResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
    Product:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: float
      required:
        - name
        - description
        - price
    ProductResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: float
    Transaction:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        totalAmount:
          type: number
          format: float
        taxAmount:
          type: number
          format: float
      required:
        - userId
        - totalAmount
        - taxAmount
    TransactionResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
        totalAmount:
          type: number
          format: float
        taxAmount:
          type: number
          format: float
        timestamp:
          type: string
          format: date-time
    TransactionItem:
      type: object
      properties:
        transactionId:
          type: integer
          format: int64
        productId:
          type: integer
          format: int64
        quantity:
          type: integer
      required:
        - transactionId
        - productId
        - quantity
    TransactionItemResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        transactionId:
          type: integer
          format: int64
        productId:
          type: integer
          format: int64
        quantity:
          type: integer
        price:
          type: number
          format: float
    Payment:
      type: object
      properties:
        transactionId:
          type: integer
          format: int64
        paymentMethod:
          type: string
          enum: [CREDIT_CARD, DEBIT_CARD, CASH]
        status:
          type: string
          enum: [PENDING, COMPLETED, FAILED]
      required:
        - transactionId
        - paymentMethod
        - status
    PaymentResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        transactionId:
          type: integer
          format: int64
        paymentMethod:
          type: string
        status:
          type: string
    TaxRecord:
      type: object
      properties:
        transactionId:
          type: integer
          format: int64
        vatAmount:
          type: number
          format: float
        submittedToZRA:
          type: boolean
      required:
        - transactionId
        - vatAmount
        - submittedToZRA
    TaxRecordResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        transactionId:
          type: integer
          format: int64
        vatAmount:
          type: number
          format: float
        submittedToZRA:
          type: boolean
